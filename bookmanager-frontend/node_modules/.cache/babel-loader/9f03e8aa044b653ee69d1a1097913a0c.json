{"ast":null,"code":"const axios = require(\"axios\");\n\nconst SERVER_IP = \"http://127.0.0.1:8000/\";\nconst utilities = {\n  fetchBooks: async function () {\n    return await axios.get(SERVER_IP + \"books\").then(function (response) {\n      console.log(response.data);\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n      return error;\n    });\n  },\n  fetchBook: async function (id) {\n    return await axios.get(SERVER_IP + \"book/\" + id).then(function (response) {\n      console.log(response.data);\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  fetchAuthors: async function () {\n    return await axios.get(SERVER_IP + \"authors\").then(function (response) {\n      console.log(response.data);\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n      return error;\n    });\n  },\n  updateBook: async function (book) {\n    console.log(book);\n    book = JSON.stringify(book);\n    return await axios.put(SERVER_IP + \"book/\" + book.book_id, book, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.status == 200;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n};\nexport default utilities;","map":{"version":3,"sources":["/Users/adityakumar/django/bookmanager-frontend/src/js/utilities.js"],"names":["axios","require","SERVER_IP","utilities","fetchBooks","get","then","response","console","log","data","catch","error","fetchBook","id","fetchAuthors","updateBook","book","JSON","stringify","put","book_id","headers","status"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,SAAS,GAAG,wBAAlB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,kBAAkB;AAC5B,WAAO,MAAMJ,KAAK,CACfK,GADU,CACNH,SAAS,GAAG,OADN,EAEVI,IAFU,CAEL,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,aAAOH,QAAQ,CAACG,IAAhB;AACD,KALU,EAMVC,KANU,CAMJ,UAAUC,KAAV,EAAiB;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,aAAOA,KAAP;AACD,KATU,CAAb;AAUD,GAZe;AAchBC,EAAAA,SAAS,EAAE,gBAAgBC,EAAhB,EAAoB;AAC7B,WAAO,MAAMd,KAAK,CACfK,GADU,CACNH,SAAS,GAAG,OAAZ,GAAsBY,EADhB,EAEVR,IAFU,CAEL,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,aAAOH,QAAQ,CAACG,IAAhB;AACD,KALU,EAMVC,KANU,CAMJ,UAAUC,KAAV,EAAiB;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KARU,CAAb;AASD,GAxBe;AAyBhBG,EAAAA,YAAY,EAAE,kBAAkB;AAC9B,WAAO,MAAMf,KAAK,CACfK,GADU,CACNH,SAAS,GAAG,SADN,EAEVI,IAFU,CAEL,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,aAAOH,QAAQ,CAACG,IAAhB;AACD,KALU,EAMVC,KANU,CAMJ,UAAUC,KAAV,EAAiB;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,aAAOA,KAAP;AACD,KATU,CAAb;AAUD,GApCe;AAqChBI,EAAAA,UAAU,EAAE,gBAAgBC,IAAhB,EAAsB;AAC9BT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACAA,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAP;AACA,WAAO,MAAMjB,KAAK,CAACoB,GAAN,CAAUlB,SAAS,GAAG,OAAZ,GAAsBe,IAAI,CAACI,OAArC,EAA8CJ,IAA9C,EAAoD;AAACK,MAAAA,OAAO,EAAC;AAAC,wBAAe;AAAhB;AAAT,KAApD,EACZhB,IADY,CACNC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACgB,MAAT,IAAmB,GAA1B;AACH,KAHY,EAIZZ,KAJY,CAIN,UAAUC,KAAV,EAAiB;AACpBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KANY,CAAb;AAOH;AA/Ce,CAAlB;AAkDA,eAAeT,SAAf","sourcesContent":["const axios = require(\"axios\");\nconst SERVER_IP = \"http://127.0.0.1:8000/\";\n\nconst utilities = {\n  fetchBooks: async function () {\n    return await axios\n      .get(SERVER_IP + \"books\")\n      .then(function (response) {\n        console.log(response.data);\n        return response.data;\n      })\n      .catch(function (error) {\n        console.log(error);\n        return error;\n      });\n  },\n\n  fetchBook: async function (id) {\n    return await axios\n      .get(SERVER_IP + \"book/\" + id)\n      .then(function (response) {\n        console.log(response.data);\n        return response.data;\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  },\n  fetchAuthors: async function () {\n    return await axios\n      .get(SERVER_IP + \"authors\")\n      .then(function (response) {\n        console.log(response.data);\n        return response.data;\n      })\n      .catch(function (error) {\n        console.log(error);\n        return error;\n      });\n  },\n  updateBook: async function (book) {\n      console.log(book)\n      book = JSON.stringify(book)\n      return await axios.put(SERVER_IP + \"book/\" + book.book_id, book, {headers:{'Content-Type':'application/json'}})\n      .then((response) => {\n          return response.status == 200\n      })\n      .catch(function (error) {\n          console.log(error)\n      })\n  }\n};\n\nexport default utilities;\n"]},"metadata":{},"sourceType":"module"}